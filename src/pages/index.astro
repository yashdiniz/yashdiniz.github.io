---
import colors from "../components/shared/colors";
import Base from "../components/shared/layouts/base/BaseLayout.astro";
import AsciiSvg from "../components/core/term/TermAsciiSvg.astro";
import Termlink from "../components/core/term/TermLink.astro";
import Termbox from "../components/shared/TermBox/TermBox.astro";
import Yash from "../assets/asciiface";
import {
  FaBrandsGithub,
  FaBrandsLinkedin,
  FaSolidLink,
  FaSolidCalendar,
} from "solid-icons/fa";
---

<Base showFooter>
  <div style="margin: 20px 20px 40px 20px;">
    <Termbox command="neofetch whoami --source ascii.txt ">
      <div id="hero">
        <!-- Mugshot to asciiart credits: asciiart.eu -->
        <AsciiSvg text={Yash} height="100%" animate />
        <div>
          <h1 class="name">Yash Diniz</h1>
          <p>üë®‚Äçüíª Software Engineering</p>
          <p>
            At <a href="http://bluealtair.com">Blue Altair</a>.
            <!-- <Termlink -->
            <!--   href="https://velocilabs.com" -->
            <!--   text="Velocilabs‚ö°" -->
            <!-- />. -->
          </p>
          <p>üåèüìçIndia</p>
          <p>Connect with me!</p>
          <p>
            <!-- <a href="https://t.me/yashdiniz" target="_blank">
              <FaBrandsTelegram size={"2rem"} />
            </a>&nbsp; -->
            <a href="https://github.com/yashdiniz" target="_blank">
              <FaBrandsGithub size={"2rem"} />
            </a>&nbsp;
            <a href="https://linkedin.com/in/yashdiniz" target="_blank">
              <FaBrandsLinkedin size={"2rem"} />
            </a>&nbsp;
            <a href="https://cal.com/yashdiniz" target="_blank">
              <FaSolidCalendar size={"1.8rem"} />
            </a>&nbsp;
            <!-- <a href="https://calendar.app.google/CTEwTLRJKugcq4e1A" target="_blank"> -->
            <!--   <FaSolidCalendar size={"1.8rem"} /> -->
            <!-- </a>&nbsp; -->
            <a href="https://bio.link/yashdiniz" target="_blank">
              <FaSolidLink size={"2rem"} />
            </a>
          </p>
          <p>Check out my <a href="/posts">blog archive</a>.</p>
        </div>
      </div>
      <Termlink href="#about" text="Scroll down‚Ä¶" animate />
    </Termbox>
  </div>
  <div style="margin: 80px auto; padding: 10px; max-width: 768px;" id="about">
    <h2>About Me</h2>
    <p>
      I'm a backend engineer with over 3 years of experience building in Go and
      Node.js. I have worked on IoT, social networks, sustainability, and
      e-commerce projects, always prioritizing clean, maintainable, scalable
      architectures.
    </p>
    <p>
      At <a href="http://spintly.com">Spintly</a>, I redesigned core
      microservices, using Saga patterns to improve stability and cut customer
      complaints by 33%. This effort reduced server errors by an impressive 66%
      over 8 months.
    </p>
    <p>
      At <a href="http://velocilabs.com">Velocilabs</a>, I designed and built
      the backend for a social media platform, <a href="https://spyke.social"
        >Spyke</a
      >, using Go, PostgreSQL, and other technologies. I developed a custom
      GraphQL API that boosted data fetching efficiency by 40%, enabling the
      frontend team to iterate rapidly and deliver features faster.
    </p>
    <p>
      As a former freelancer, I've been part of the team that delivered <a
        href="https://the-green-i.vercel.app">The Green I</a
      >. Using Next.js serverless and NeonDB, I developed the backend for a
      geo-location app that rewards users for supporting local businesses by
      connecting them with eco-friendly vendors via GPS.
    </p>
    <p>
      My technical understanding covers (non-exhaustive list):
      <ul>
        <li><b>APIs</b>: REST, tRPC and GraphQL.</li>
        <li>
          <b>Cloud & DevOps</b>: Docker-based microservices, CI/CD pipelines
          with GitHub Actions.
        </li>
        <li>
          <b>Code Quality</b>: Adhering to DRY principles and OWASP standards
          for secure, reusable code.
        </li>
        <li>
          <b>MLOps</b>: Proficient in using MLFlow, Databricks, and deploying
          models built with XGBoost, CatBoost, Scikit-learn, and pandas.
        </li>
      </ul>
    </p>
    <p>
      I'm always evolving ‚Äî currently exploring serverless architectures using
      tRPC and tinkering with MLOps using MLFlow on Databricks.
    </p>
    <p>
      In addition to my professional endeavors, I have also been an independent
      researcher. Collaborating with <a
        href="https://en.wikipedia.org/wiki/National_Institute_of_Technology_Goa"
        >NIT Goa</a
      >, we delved into the design, analysis, and applications of ternary logic
      gates. It's published on <a
        href="https://www.researchgate.net/profile/Yash-Diniz-2">ResearchGate</a
      >.
    </p>
    <p>
      You can connect with me directly on
      <a href="https://t.me/yashdiniz">Telegram</a> or <a
        href="https://linkedin.com/in/yashdiniz">LinkedIn</a
      >.
    </p>
    <p>
      <b>Let's build software that lasts.</b>
    </p>
    <!--<h2>Caveats</h2>-->
    <!--<p>-->
    <!--  I am addicted to learning and continuously discovering new things, and I-->
    <!--  love the thrill and joy of building new applications. I tend to choose-->
    <!--  this sometimes over food, sleep, and even hygiene.-->
    <!--</p>-->
    <!--<p>-->
    <!--  I do have difficulty delegating tasks. I need to get to know you well-->
    <!--  before I can work with you, so I guess that's a good thing?-->
    <!--</p>-->
    <!--<p>-->
    <!--  I normally tend to over-explain and provide detailed and descriptive-->
    <!--  answers for any question asked. Friends used to call me a college-->
    <!--  professor who explained stuff really well ;) Being brief is something I've-->
    <!--  been working on.-->
    <!--</p>-->
    <!-- <h2>Deep Dive</h2> -->
    <!-- <p> -->
    <!--   <audio controls> -->
    <!--     <source src="/deep_dive.mp3" -->
    <!--   Your browser does not support audio elements. -->
    <!--   </audio> -->
    <!-- </p> -->
  </div>
  <style define:vars={{ white: colors.white, yellow: colors.yellow }}>
    h1.name {
      color: var(--yellow);
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      color: var(--white);
    }
    #hero {
      display: flex;
      flex-direction: row;
      justify-content: center;
      align-items: center;
      gap: 1rem;
      height: 75vh;
      padding-bottom: 20px;
    }
    @media (max-width: 768px) {
      #hero {
        flex-direction: column;
        height: 100%;
      }
    }
  </style>
</Base>
