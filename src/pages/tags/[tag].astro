---
import type { GetStaticPaths, MarkdownInstance } from "astro";
import Base from "../../layouts/Base.astro";
import BlogPost from "../../components/BlogPost.astro";

export const getStaticPaths = (async () => {
	const allPosts = await Astro.glob("../posts/*.md");

	// Return the list of known tags
	const uniques = [
		...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
	];

	return uniques.map((tag) => ({
		params: { tag },
		props: {
			posts: allPosts.filter((post) => post.frontmatter.tags?.includes(tag)),
		},
	}));
}) satisfies GetStaticPaths;

const { tag } = Astro.params;
const { posts } = Astro.props;

type Post = MarkdownInstance<Record<string, any>>;
---

<Base title={`tag:${tag}`}>
	<h2>Posts tagged with {tag}</h2>
	<ul>
		{
			posts.map((post: Post) => (
				<BlogPost url={post.url} title={post.frontmatter.title} />
			))
		}
	</ul>
</Base>
